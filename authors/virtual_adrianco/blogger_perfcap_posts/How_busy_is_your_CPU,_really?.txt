Title: How busy is your CPU, really?
URL: https://perfcap.blogspot.com/2005/10/how-busy-is-your-cpu-really.html

Just in case you thought that you could compare your CPU utilization data across Solaris releases I have a few words of caution.<br /><br />To start with there is the whole problem of interrupts, do they count as system time, or do they just make whatever they interrupted take longer?<br /><br />Then there is the question of wait-for-io, and who is waiting for which io? This is a form of idle time that tends to confuse people as it doesn't really mean anything once you have more than one CPU.<br /><br />There is one mechanism used to report the systemwide CPU utilization data. This data is reported in a per-cpu kstat data structure and is used by every tool that ever reports CPU usr, sys, wio, idle etc. Most tools sum the data over all the CPUs, mpstat gives you the per CPU data. The form of the data is a number of ticks of CPU time that accumulates, starting at zero at boot time. To measure CPU utilization over a time interval, you measure the difference in the number of ticks and divide by the time, and the tick rate. The tick rate is set by the clock interrupt, it defaults to 100Hz, but can be set to 1000Hz.<br /><br />There are two mechanisms used to measure CPU usage, one is the old method of using the clock interrupt to see what is running every 100Hz. This is low resolution, and since the clock wakes up jobs, its possible for jobs to hide between the ticks, so its a statistically biased measure.<br />The other mechanism is microstate accounting, where every change of state is timed with a hires clock. This was only used for tracking CPU usage by processes, and needed special calls to get the data in releases up to Solaris 9.<br /><br />So how do those nice numbers you get from vmstat or your favourite tool vary?<br /><br /><span style="font-weight: bold;">Solaris 8</span> and earlier releases: interrupt time does not get classified as system time<br /><br /><span style="font-weight: bold;">Solaris 9</span>: Interrupt time is counted as system time.<br /><br /><span style="font-weight: bold;">Solaris 10</span>: wait-for-io time will always be zero. The ratio of confusion to enlightenment was too high, so the entire concept has been removed from Solaris. This is a good thing.<br /><br /><span style="font-weight: bold;">Solaris 10</span> initial release: systemwide CPU time is now measured using microstates, this is far more accurate than ticks, but somehow the interrupt time ended up spread out rather than in system time.<br /><br />This is unfortunate, but I'm told that an update of <span style="font-weight: bold;">Solaris 10</span> will again classify interrupts as system time, and then it will all be just about as accurate as it can be.<br /><br />You may be curious about the size of errors in these measurements, the answer is that "it depends". There is an SE toolkit script called cpuchk.se that looks at the process data and compares the ticks with the microstate data. However, I don't have any measures of interrupt time differences.