I agree with this in general, however to avoid premature optimization it may still be worth building a prototype that is pure serverless, then as you roll it out to high volume production use, some of those functions can be run more effectively (lower latency/cost) by autoscaling permanent containers. If you think about a service containing a bundle of functions, there are likely to be some functions in heavy use, and others that are infrequently invoked, so you are paying the memory overhead of having them sitting around waiting. In some cases that matters, in others itâ€™s not a big deal.